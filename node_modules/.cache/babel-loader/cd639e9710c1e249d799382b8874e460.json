{"ast":null,"code":"var _jsxFileName = \"/Users/indira/Documents/incubator/microtasks/src/01/Filter.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function Filter() {\n  _s();\n\n  const [money, setMoney] = useState([{\n    banknots: 'Dollars',\n    value: 100,\n    number: ' a1234567890'\n  }, {\n    banknots: 'Dollars',\n    value: 50,\n    number: ' z1234567890'\n  }, {\n    banknots: 'RUBLS',\n    value: 100,\n    number: ' w1234567890'\n  }, {\n    banknots: 'Dollars',\n    value: 100,\n    number: ' e1234567890'\n  }, {\n    banknots: 'Dollars',\n    value: 50,\n    number: ' c1234567890'\n  }, {\n    banknots: 'RUBLS',\n    value: 100,\n    number: ' r1234567890'\n  }, {\n    banknots: 'Dollars',\n    value: 50,\n    number: ' x1234567890'\n  }, {\n    banknots: 'RUBLS',\n    value: 50,\n    number: ' v1234567890'\n  }]);\n  let [nameButton, setNameButton] = useState('All');\n  let CurrentMoney = money;\n\n  if (nameButton === 'RUBLS') {\n    let CurrentMoney = money.filter(m => m.banknots === 'RUBLS');\n  }\n\n  if (nameButton === 'Dollars') {\n    let CurrentMoney = money.filter(m => m.banknots === 'Dollars');\n  }\n\n  const onClickFilterHandler = nameButton => {\n    console.log(nameButton);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      children: CurrentMoney.map((m, i) => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [m.banknots, \"  \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [m.value, \"  \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [m.number, \"  \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 29\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => onClickFilterHandler('All'),\n      children: \"All\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => onClickFilterHandler('Dollar'),\n      children: \"Dollar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => onClickFilterHandler('RUBLS'),\n      children: \"Rubl\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Filter, \"xPd1P9S2R87uc4E43YYWI/x7znA=\");\n\n_c = Filter;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"Filter\");","map":{"version":3,"sources":["/Users/indira/Documents/incubator/microtasks/src/01/Filter.tsx"],"names":["React","useState","Filter","money","setMoney","banknots","value","number","nameButton","setNameButton","CurrentMoney","filter","m","onClickFilterHandler","console","log","map","i"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\n\n\ntype MoneyType = {\n    banknots: string;\n    value: number;\n    number: string;\n}\n\nexport function Filter() {\n    const [money, setMoney] = useState([\n        {banknots: 'Dollars', value: 100, number: ' a1234567890'},\n        {banknots: 'Dollars', value: 50, number: ' z1234567890'},\n        {banknots: 'RUBLS', value: 100, number: ' w1234567890'},\n        {banknots: 'Dollars', value: 100, number: ' e1234567890'},\n        {banknots: 'Dollars', value: 50, number: ' c1234567890'},\n        {banknots: 'RUBLS', value: 100, number: ' r1234567890'},\n        {banknots: 'Dollars', value: 50, number: ' x1234567890'},\n        {banknots: 'RUBLS', value: 50, number: ' v1234567890'},\n    ])\n\n    let [nameButton, setNameButton] = useState('All')\n    let CurrentMoney = money;\n\n    if (nameButton === 'RUBLS') {\n        let CurrentMoney = money.filter(m => m.banknots === 'RUBLS')\n    }\n    if (nameButton === 'Dollars') {\n        let CurrentMoney = money.filter(m => m.banknots === 'Dollars')\n    }\n\n    const onClickFilterHandler = (nameButton: string) => {\n        console.log(nameButton)\n    }\n    return (\n        <>\n            <ul>\n                {CurrentMoney.map((m: MoneyType, i: number) => {\n                    return (<li key={i}>\n                        <span>{m.banknots}  </span>\n                        <span>{m.value}  </span>\n                        <span>{m.number}  </span>\n                    </li>)\n                })}\n            </ul>\n            <button onClick={() => onClickFilterHandler('All')}>All</button>\n            <button onClick={() => onClickFilterHandler('Dollar')}>Dollar</button>\n            <button onClick={() => onClickFilterHandler('RUBLS')}>Rubl</button>\n        </>\n    );\n};\n\n"]},"metadata":{},"sourceType":"module"}